% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/c3pie.R
\name{c3pie}
\alias{c3pie}
\title{C3 Pie Charts}
\usage{
c3pie(
  x,
  labels = names(x),
  col = NULL,
  slice.text = "pct",
  legend.position = "right",
  main = NULL,
  width = NULL,
  height = NULL,
  elementId = NULL
)
}
\arguments{
\item{x}{a vector of non-negative numerical quantities. The values in x are displayed as the areas of pie slices.}

\item{labels}{character vector giving names for the slices.}

\item{col}{character vector of colors to be used in filling the slices. Can be a hex value or an R built-in color name.}

\item{slice.text}{\code{"pct"} to display percentage-formatted values inside pie slices (default c3.js behavior) or \code{"id"} to display the slice's name from \code{labels} (note that this does not change labels' positioning within their slices, so using \code{slize.text = "id"} may result in poorly-placed or cut-off slice labels)}

\item{legend.position}{Position of the legend. Possible values are \code{"right"}, \code{"bottom"}, \code{"inset"}, and \code{"hide"}.}

\item{main}{a main title for the plot.}

\item{width}{width of the widget to create for the plot. The default is NULL, which results in automatic resizing based on the plot's container.}

\item{height}{height of the widget to create for the plot. The default is NULL, which results in automatic resizing based on the plot's container.}

\item{elementId}{Use an explicit element ID for the widget, rather than an automatically generated one.}
}
\description{
Draw an interactive pie chart using 'C3.js'
}
\examples{

pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)
names(pie.sales) <- c("Blueberry", "Cherry",
                    "Apple", "Boston Cream", "Other", "Vanilla Cream")
c3pie(pie.sales)
c3pie(pie.sales, col = c("purple", "violetred1", "green3",
                      "cornsilk", "cyan", "white"))

}
