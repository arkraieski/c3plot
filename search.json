[{"path":"/articles/Benchmark.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Benchmark","text":"vignette benchmarks c3plot various plotting systems R, namely plotly. Two basic plots used benchmark, basic scatter plot grouped line plot. uncertain JavaScript execution time counted microbenchmark. Even assume isn’t, benchmark results informative ’s always better R process gets tied less time per plot. First, let’s load visualization packages compare:","code":"library(c3plot) library(c3) #>  #> Attaching package: 'c3' #> The following objects are masked from 'package:graphics': #>  #>     grid, legend library(plotly) #> Loading required package: ggplot2 #>  #> Attaching package: 'plotly' #> The following object is masked from 'package:ggplot2': #>  #>     last_plot #> The following object is masked from 'package:stats': #>  #>     filter #> The following object is masked from 'package:graphics': #>  #>     layout library(ggplot2)"},{"path":"/articles/Benchmark.html","id":"scatter-plot","dir":"Articles","previous_headings":"","what":"Scatter Plot","title":"Benchmark","text":"First, benchmark creation simple scatter plots using data gapminder package. begin, define functions create similar scatterplots using packages compared. plots important shown demonstrate work produce roughly similar plots.   Now, functions benchmarked: main development machine, c3plot quickest order magnitude. can vary, plotly roughly 20 times slower, ggplotly() hundreds times slower. However, plotly still quick enough performance difference c3plot imperceptible users.  Let’s look kernel density plots time distributions c3plot plotly. Let’s use two-sample Wilcoxon test compare means execution time c3plot plotly. t-test suitable assume normality. null hypothesis c3plot plotly mean execution time scatter plots. Can reject null hypothesis?","code":"library(gapminder)  gapminder <- gapminder  plot_base <- function(x){      plot(x = x$gdpPercap, y = x$lifeExp) }  plot_base(gapminder) plot_c3plot <- function(x){     c3plot(x = x$gdpPercap, y = x$lifeExp, sci.x = TRUE) } plot_c3plot(gapminder) plot_plotly <- function(x){   plot_ly(data = x, x = ~gdpPercap, y = ~lifeExp, type = \"scatter\") } plot_plotly(gapminder) #> No scatter mode specifed: #>   Setting the mode to markers #>   Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode plot_ggplotly <- function(x){   g <- ggplot(x, aes(x = gdpPercap, y = lifeExp)) + geom_point() + theme_minimal()   ggplotly(g) } plot_ggplotly(gapminder) plot_ggplot <- function(x){   ggplot(x, aes(x = gdpPercap, y = lifeExp)) + geom_point() + theme_minimal() } plot_ggplot(gapminder) plot_c3 <- function(x){  c3(x, x = \"gdpPercap\", y = \"lifeExp\") %>%     c3_scatter() } plot_c3(gapminder) library(microbenchmark) m <- microbenchmark(base = plot_base(gapminder),                c3plot = plot_c3plot(gapminder),                plotly = plot_plotly(gapminder),                ggplotly = plot_ggplotly(gapminder),                ggplot = plot_ggplot(gapminder),               c3 = plot_c3(gapminder),                unit = \"ms\",                times = 50) m #> Unit: milliseconds #>      expr     min      lq      mean   median      uq      max neval #>      base 28.7883 73.0815 75.587330 73.26520 73.4560 216.7462    50 #>    c3plot  0.0835  0.1215  0.166908  0.13290  0.1408   1.9868    50 #>    plotly  0.3976  0.4970  0.583238  0.54050  0.6033   2.1235    50 #>  ggplotly 56.0290 57.8987 59.477148 58.57080 61.3121  69.1031    50 #>    ggplot  3.6377  3.7975  4.043334  3.91415  4.0712   7.9483    50 #>        c3  1.8926  2.1298  2.978556  2.29815  2.4807  36.8163    50 plot(m) density_c3plot <- density(m$time[m$expr == \"c3plot\"]) c3plot(density_c3plot) density_plotly <- density(m$time[m$expr == \"plotly\"]) c3plot(density_plotly) w <- wilcox.test(m$time[m$expr == \"c3plot\"],                  m$time[m$expr == \"plotly\"],                  alternative = \"less\",                  paired = FALSE) w #>  #>  Wilcoxon rank sum test with continuity correction #>  #> data:  m$time[m$expr == \"c3plot\"] and m$time[m$expr == \"plotly\"] #> W = 49, p-value < 2.2e-16 #> alternative hypothesis: true location shift is less than 0 ifelse(w$p.value < .05, \"yes\", \"no\") #> [1] \"yes\""},{"path":"/articles/Benchmark.html","id":"grouped-line-plots","dir":"Articles","previous_headings":"","what":"Grouped Line plots","title":"Benchmark","text":"Making line plots colored group common plotting task potentially expose slowness c3plot. make line plots total GDP continent year. First, must summarize data define functions making lineplot various packages.  Now let’s benchmark line plot functions:  Let’s perform test : Can reject null hypothesis c3 plotly mean?","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union gdp_cont <- gapminder %>%   mutate(gdp = pop * gdpPercap) %>%   group_by(continent, year) %>%   summarize(total_gdp = sum(gdp)) #> `summarise()` has grouped output by 'continent'. You can override using the #> `.groups` argument.  plot_title <- \"Total GDP by Continent 1952 - 2007\" c3plot_line <- function(x){   c3plot(x$year, x$total_gdp, col.group = x$continent, sci.y = TRUE,           type = \"l\", main = plot_title, xlab = \"Year\", ylab = \"GDP\",          legend.title = \"Continent\") }  c3plot_line(gdp_cont) ggplot_line <- function(x){   ggplot(x, aes(x = year, y = total_gdp, col = continent, group = continent)) +     geom_line() +     theme_minimal() +     labs(title = plot_title, x = \"Year\", y = \"GDP\") } ggplot_line(gdp_cont) ggplotly_line <- function(x){   p <- ggplot(x, aes(x = year, y = total_gdp, col = continent)) +     geom_line() +     theme_minimal() +     labs(title = plot_title, x = \"Year\", y = \"GDP\")   ggplotly(p) }  ggplotly_line(gdp_cont) plotly_line <- function(x){   plot_ly(data = x, x = ~year, y = ~total_gdp, split = ~continent,           type = \"scatter\", color  = ~continent, mode = \"lines\") } plotly_line(gdp_cont) m2 <- microbenchmark(c3plot = c3plot_line(gdp_cont),                      ggplotly = ggplotly_line(gdp_cont),                      plotly = plotly_line(gdp_cont),                      ggplot = ggplot_line(gdp_cont),                      unit = \"ms\",                      times = 50) m2 #> Unit: milliseconds #>      expr     min      lq      mean   median      uq     max neval #>    c3plot  0.5008  0.5956  0.656490  0.62700  0.6408  2.9697    50 #>  ggplotly 62.0109 62.9352 64.765920 63.64765 66.7642 72.8113    50 #>    plotly  0.3928  0.4561  0.615300  0.51135  0.5501  4.2184    50 #>    ggplot  5.3098  5.4953  5.781068  5.63025  5.7844  9.8254    50 plot(m2) w2 <- wilcox.test(m2$time[m2$expr == \"c3plot\"],                  m2$time[m2$expr == \"plotly\"],                  alternative = \"less\",                  paired = FALSE) w2 #>  #>  Wilcoxon rank sum test with continuity correction #>  #> data:  m2$time[m2$expr == \"c3plot\"] and m2$time[m2$expr == \"plotly\"] #> W = 2234, p-value = 1 #> alternative hypothesis: true location shift is less than 0 ifelse(w2$p.value < .05, \"yes\", \"no\") #> [1] \"no\""},{"path":"/articles/Benchmark.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Benchmark","text":"Although benchmark results vary different systems, results development machine indicate c3plot faster plotly (others) scatter plot grouped line plot tested. Although statistically significant, difference performance c3plot plotly almost certainly never perceptible users. c3plot direct use plotly potentially offer perceptible performance improvements using ggplotly() generate interactive visualizations. Shiny developers may find information useful.","code":""},{"path":"/articles/c3plot-getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with c3plot","text":"R renowned graphical capabilities, base R’s ‘graphics’ package makes easy quick create clean, useful plots. However, plots created base graphics static images therefore lack interactive features tooltips zooming. c3plot package implements various plotting functions similar names, arguments behavior counterparts base graphics, except plots create interactive HTML widgets rendered using C3.js charting library. makes easy generate interactive versions common plots without cognitive overhead using/learning plotting package completely different arguments syntax. vignette help get started creating interactive visualizations c3plot. first step install package:","code":"# install.packages(\"devtools\") devtools::install_github(\"arkraieski/c3plot\")"},{"path":"/articles/c3plot-getting-started.html","id":"basic-scatter-plots","dir":"Articles","previous_headings":"","what":"Basic Scatter Plots","title":"Getting Started with c3plot","text":"c3plot() function works much like base R’s plot() function. create scatter plot, simply provide two vectors (often data.frame) arguments x y. many optional arguments can specified, ’ll get later document. First, let’s create basic scatter plot using base R refresher:  Now c3plot(): can use mouse wheel zoom chart, points tooltips. Importantly, neither base R plot earlier much way chartjunk.","code":"library(c3plot) mtcars <- mtcars # R's Motor Trend Cars Dataset  plot(x = mtcars$hp, y = mtcars$qsec) c3plot(x = mtcars$hp, y = mtcars$qsec)"},{"path":"/articles/c3plot-getting-started.html","id":"title-and-axis-labels","dir":"Articles","previous_headings":"","what":"Title and Axis Labels","title":"Getting Started with c3plot","text":"Just like plot(), can specify plot title x y axis labels using arguments main, xlab, ylab, respectively:","code":"c3plot(x = mtcars$hp, y = mtcars$qsec,        main = \"1/4 Mile Time vs. Horsepower\",        xlab = \"HP\",        ylab = \"Seconds\")"},{"path":"/articles/c3plot-getting-started.html","id":"line-plots","dir":"Articles","previous_headings":"","what":"Line plots","title":"Getting Started with c3plot","text":"Like base plot() function, c3plot() can also create line plots setting type argument “l” (default “p” points). can also show points lines setting “b”.","code":"x <- 1:10 y <- x*x  c3plot(x, y, type = \"l\", zoom = FALSE)"},{"path":"/articles/c3plot-getting-started.html","id":"color","dir":"Articles","previous_headings":"","what":"Color","title":"Getting Started with c3plot","text":"c3plot() colors points can specified using col argument. Colors can given strings containing hex value strings names R built-colors. can run grDevices::colors() see valid color names. color points color, provide single value col: Points can also colored groups data. two ways : Pass factor length x col.group argument leave col NULL. Points grouped col.group, group assigned color C3.js using default palette. Pass factor col.group vector colors use group col. First, let’s color scatter plot factor let C3.js pick colors: Now, coloring manually R:","code":"c3plot(x = mtcars$hp, y = mtcars$qsec, col = \"red\") # convert mtcars$cyl to a factor mtcars$cyl <- as.factor(paste(mtcars$cyl, \"cylinders\"))  c3plot(mtcars$hp, mtcars$mpg, col.group = mtcars$cyl, legend.title = \"cyl\") c3plot(mtcars$hp, mtcars$mpg, col.group = mtcars$cyl,         col = c(\"red2\", \"yellow3\", \"purple\"),        legend.title = \"cyl\")"},{"path":"/articles/c3plot-getting-started.html","id":"pie-charts","dir":"Articles","previous_headings":"","what":"Pie charts","title":"Getting Started with c3plot","text":"Sometimes, boss might want make pie chart. c3plot also provides c3pie() function works like base R pie function, albeit simplified set arguments. x vector non-negative numerical quantities. Names pie slices can given character vector labels argument. x named vector, names used label pie slices (labels defaults names(x)). ’s example adapted help file pie():","code":"pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12) names(pie.sales) <- c(\"Blueberry\", \"Cherry\",     \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla Cream\") c3pie(pie.sales)"},{"path":"/articles/c3plot-getting-started.html","id":"s3-methods","dir":"Articles","previous_headings":"","what":"S3 methods","title":"Getting Started with c3plot","text":"Like base’s plot(), c3plot() generic function S3 methods various classes base R objects. c3plot() doesn’t many methods, nonetheless provides useful shortcuts making common plots. see available methods, run: far, ’ve working default method. method help available. example, run ?c3plot.density view help file c3plot.density(). Let’s create density plot Old Faithful geyser data using c3plot.density(). First, create “density” object: Since c3plot() method “density” objects, can plot object simply passing x argument (method doesn’t need y): Compare base R version:  plots similar aside visual differences obviously interactivity c3plot version. c3plot() methods designed replicate functionality Base R counterparts. c3plot.function() lets us cool stuff like : (note use scientific notation y-axis):","code":"methods(c3plot) #> [1] c3plot.default*  c3plot.density*  c3plot.factor*   c3plot.function* #> [5] c3plot.lm*       #> see '?methods' for accessing help and source code d <- density(faithful$eruptions, bw = \"sj\") class(d) #> [1] \"density\" d #>  #> Call: #>  density.default(x = faithful$eruptions, bw = \"sj\") #>  #> Data: faithful$eruptions (272 obs.); Bandwidth 'bw' = 0.14 #>  #>        x               y             #>  Min.   :1.180   Min.   :0.0001834   #>  1st Qu.:2.265   1st Qu.:0.0422638   #>  Median :3.350   Median :0.1709243   #>  Mean   :3.350   Mean   :0.2301726   #>  3rd Qu.:4.435   3rd Qu.:0.4134348   #>  Max.   :5.520   Max.   :0.5945634 c3plot(d) plot(d) c3plot(qnorm) # default range c(0, 1) c3plot(sin, -pi,  3*pi, col = \"orange2\", sci.y = TRUE)"},{"path":"/articles/c3plot-getting-started.html","id":"bar-charts","dir":"Articles","previous_headings":"","what":"Bar charts","title":"Getting Started with c3plot","text":"package also provides c3barplot() function modeled barplot() base graphics. Pass numeric vector describing heights bars heights argument. can also provide vector names bars argument narmes.arg (otherwise x-axis numbered sequentially). ’s simple, silly example: can also use “shortcut” provided c3plot.factor() method make bar chart factor level counts. Simply pass factor x argument:","code":"c3barplot(heights = c(100, 30), names.arg = c(\"Red Sox\", \"Yankees\"), ylab = \"% Awesome\",           main = \"Awesomeness of Baseball Teams\") # cyl column of mtcars was already converted into a factor earlier in this vignette c3plot(mtcars$cyl, col = \"#FF2800\", main = \"Cars by Number of Cylinders in mtcars\")"},{"path":"/articles/c3plot-getting-started.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Getting Started with c3plot","text":"now ready start using c3plot data. Consult help pages details arguments methods. c3plot doesn’t offer quite level customization base graphics, ’s simple, interactive alternative many common base plots.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Kraieski. Author, maintainer. R Core team. Contributor.            code examples extracted base R 'plot()' methods","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kraieski (2023). c3plot: R 'graphics'-like Interface 'C3.js'. R package version 0.1.1.","code":"@Manual{,   title = {c3plot: An R 'graphics'-like Interface to 'C3.js'},   author = {Alex Kraieski},   year = {2023},   note = {R package version 0.1.1}, }"},{"path":"/index.html","id":"c3plot","dir":"","previous_headings":"","what":"An R graphics-like Interface to C3.js","title":"An R graphics-like Interface to C3.js","text":"GitHub Workflow Status goal c3plot provide base ‘graphics’-like interface C3.js JavaScript charting library. main c3plot() function S3 generic like base plot() function methods various base R objects. Besides htmlwidgets, minimal R dependencies. Tidyverse required!","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R graphics-like Interface to C3.js","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"arkraieski/c3plot\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R graphics-like Interface to C3.js","text":"’s example code basic scatter plot using R’s airquality dataset:","code":"library(c3plot) air <- airquality c3plot(air$Ozone, air$Solar.R,         main = \"New York Air Quality Measurements\",         xlab = \"Ozone (ppb)\",        ylab = \"Solar Radiation (lang)\",        col = \"red\")"},{"path":"/index.html","id":"methods","dir":"","previous_headings":"","what":"Methods","title":"An R graphics-like Interface to C3.js","text":"see list S3 methods: way! goal replicate behavior base R plot() methods closely possible also getting benefits using C3 (ie. interactivity). method help page can accessed additional information.","code":"library(c3plot) methods(c3plot) #> [1] c3plot.default*  c3plot.density*  c3plot.factor*   c3plot.function* #> [5] c3plot.lm*       #> see '?methods' for accessing help and source code"},{"path":"/index.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"An R graphics-like Interface to C3.js","text":"package tested Windows, Linux, MacOS.","code":""},{"path":"/reference/c3barplot-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for c3barplot — c3barplot-shiny","title":"Shiny bindings for c3barplot — c3barplot-shiny","text":"Output render functions using c3barplot within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/c3barplot-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for c3barplot — c3barplot-shiny","text":"","code":"c3barplotOutput(outputId, width = \"100%\", height = \"400px\")  renderC3barplot(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/c3barplot-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for c3barplot — c3barplot-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates c3barplot env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"/reference/c3barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"C3 Bar Plots — c3barplot","title":"C3 Bar Plots — c3barplot","text":"Creates bar plot using 'C3.JS'.","code":""},{"path":"/reference/c3barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"C3 Bar Plots — c3barplot","text":"","code":"c3barplot(   heights,   names.arg = NULL,   col = NULL,   main = NULL,   ylab = NULL,   width = NULL,   height = NULL,   elementId = NULL,   ... )"},{"path":"/reference/c3barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"C3 Bar Plots — c3barplot","text":"heights vector values describing bars make plot. names.arg vector names plotted bar. col character string color bars. can either hex value name R built-color. main main title plot. ylab label y axis. width width widget create plot. default NULL, results automatic resizing based plot's container. height height widget create plot. default NULL, results automatic resizing based plot's container. elementId Use explicit element ID widget, rather automatically generated one. ... arguments passed methods.","code":""},{"path":"/reference/c3pie-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for c3pie — c3pie-shiny","title":"Shiny bindings for c3pie — c3pie-shiny","text":"Output render functions using c3pie within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/c3pie-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for c3pie — c3pie-shiny","text":"","code":"c3pieOutput(outputId, width = \"100%\", height = \"400px\")  renderC3pie(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/c3pie-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for c3pie — c3pie-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates c3pie env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"/reference/c3pie.html","id":null,"dir":"Reference","previous_headings":"","what":"C3 Pie Charts — c3pie","title":"C3 Pie Charts — c3pie","text":"Draw interactive pie chart using 'C3.js'","code":""},{"path":"/reference/c3pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"C3 Pie Charts — c3pie","text":"","code":"c3pie(   x,   labels = names(x),   col = NULL,   slice.text = \"pct\",   legend.position = \"right\",   main = NULL,   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"/reference/c3pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"C3 Pie Charts — c3pie","text":"x vector non-negative numerical quantities. values x displayed areas pie slices. labels character vector giving names slices. col character vector colors used filling slices. Can hex value R built-color name. slice.text \"pct\" display percentage-formatted values inside pie slices (default c3.js behavior) \"id\" display slice's name labels (note change labels' positioning within slices, using slize.text = \"id\" may result poorly-placed cut-slice labels) legend.position Position legend. Possible values \"right\", \"bottom\", \"inset\", \"hide\". main main title plot. width width widget create plot. default NULL, results automatic resizing based plot's container. height height widget create plot. default NULL, results automatic resizing based plot's container. elementId Use explicit element ID widget, rather automatically generated one.","code":""},{"path":"/reference/c3pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"C3 Pie Charts — c3pie","text":"","code":"pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12) names(pie.sales) <- c(\"Blueberry\", \"Cherry\",                     \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla Cream\") c3pie(pie.sales)  {\"x\":{\"labels\":[\"Blueberry\",\"Cherry\",\"Apple\",\"Boston Cream\",\"Other\",\"Vanilla Cream\"],\"values\":[0.12,0.3,0.26,0.16,0.04,0.12],\"colors\":null,\"main\":null,\"label_function\":null,\"legend\":{\"position\":\"right\",\"hide\":false}},\"evals\":[],\"jsHooks\":[]}c3pie(pie.sales, col = c(\"purple\", \"violetred1\", \"green3\",                       \"cornsilk\", \"cyan\", \"white\"))  {\"x\":{\"labels\":[\"Blueberry\",\"Cherry\",\"Apple\",\"Boston Cream\",\"Other\",\"Vanilla Cream\"],\"values\":[0.12,0.3,0.26,0.16,0.04,0.12],\"colors\":[\"#A020F0\",\"#FF3E96\",\"#00CD00\",\"#FFF8DC\",\"#00FFFF\",\"#FFFFFF\"],\"main\":null,\"label_function\":null,\"legend\":{\"position\":\"right\",\"hide\":false}},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/c3plot-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for c3plot — c3plot-shiny","title":"Shiny bindings for c3plot — c3plot-shiny","text":"Output render functions using c3plot within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/c3plot-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for c3plot — c3plot-shiny","text":"","code":"c3plotOutput(outputId, width = \"100%\", height = \"400px\")  renderc3plot(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/c3plot-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for c3plot — c3plot-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates c3Scatter env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"/reference/c3plot.default.html","id":null,"dir":"Reference","previous_headings":"","what":"The Default C3 Scatterplot Function — c3plot.default","title":"The Default C3 Scatterplot Function — c3plot.default","text":"Draw interactive scatterplot line plot using 'C3.js'.","code":""},{"path":"/reference/c3plot.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Default C3 Scatterplot Function — c3plot.default","text":"","code":"# S3 method for default c3plot(   x,   y,   type = \"p\",   xlim = NULL,   ylim = NULL,   main = NULL,   xlab = NULL,   ylab = NULL,   zoom = TRUE,   col.group = NULL,   col = NULL,   legend.title = NULL,   legend.position = \"right\",   sci.x = FALSE,   sci.y = FALSE,   ... )"},{"path":"/reference/c3plot.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Default C3 Scatterplot Function — c3plot.default","text":"x x coordinates plot. y y coordinates plot. type 1-character string giving type plot desired. following values possible: \"p\" points, \"l\" lines, \"b\" points lines. xlim x limits (x1, x2) plot. ylim y limits plot. main main title plot. xlab label x axis, defaults description x. ylab label y axis, defaults description y. zoom logical; zooming feature (controlled mouse wheel event) enabled plot? col.group optionally, factor length x group color points. col colors lines points. col.group specified, can vector colors use group data. NULL, C3 default colors used. legend.title title legend. Defaults description description col.group set. can also use legend.title = FALSE suppress show title legend. legend.position Position plot legend. Possible values \"right\", \"inset\", \"hide\". ignored points colored (.e. value set col.group); legend shown instances. sci.x logical indicating whether scientific notation used x-axis. sci.y logical indicating whether scientific notation used x-axis. ... arguments passed htmlwidgets::createWidget(): width, height, elementId. arguments default NULL.","code":""},{"path":"/reference/c3plot.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Default C3 Scatterplot Function — c3plot.default","text":"","code":"data(mtcars) c3plot(mtcars$hp, mtcars$qsec)  {\"x\":{\"data\":{\"x\":[110,110,93,110,175,105,245,62,95,123,123,180,180,180,205,215,230,66,52,65,97,150,150,245,175,66,91,113,264,175,335,109],\"y\":[16.46,17.02,18.61,19.44,17.02,20.22,15.84,20,22.9,18.3,18.9,17.4,17.6,18,17.98,17.82,17.42,19.47,18.52,19.9,20.01,16.87,17.3,15.41,17.05,18.9,16.7,16.9,14.5,15.5,14.6,18.6],\"plot_type\":\"scatter\",\"xlim\":null,\"ylim\":null,\"title\":null,\"xlab\":\"mtcars$hp\",\"ylab\":\"mtcars$qsec\",\"show_points\":true,\"zoom\":true,\"col_hex\":null,\"group_names\":null,\"grouped_data\":null,\"legend\":{\"text\":null,\"position\":\"right\",\"hide\":false},\"sci_x\":false,\"sci_y\":false}},\"evals\":[],\"jsHooks\":[]}c3plot(mtcars$disp, mtcars$hp, main = \"Displacement vs. HP in mtcars\")  {\"x\":{\"data\":{\"x\":[160,160,108,258,360,225,360,146.7,140.8,167.6,167.6,275.8,275.8,275.8,472,460,440,78.7,75.7,71.09999999999999,120.1,318,304,350,400,79,120.3,95.09999999999999,351,145,301,121],\"y\":[110,110,93,110,175,105,245,62,95,123,123,180,180,180,205,215,230,66,52,65,97,150,150,245,175,66,91,113,264,175,335,109],\"plot_type\":\"scatter\",\"xlim\":null,\"ylim\":null,\"title\":\"Displacement vs. HP in mtcars\",\"xlab\":\"mtcars$disp\",\"ylab\":\"mtcars$hp\",\"show_points\":true,\"zoom\":true,\"col_hex\":null,\"group_names\":null,\"grouped_data\":null,\"legend\":{\"text\":null,\"position\":\"right\",\"hide\":false},\"sci_x\":false,\"sci_y\":false}},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/c3plot.density.html","id":null,"dir":"Reference","previous_headings":"","what":"c3plot Method for  Kernel Density Estimation — c3plot.density","title":"c3plot Method for  Kernel Density Estimation — c3plot.density","text":"c3plot method density objects","code":""},{"path":"/reference/c3plot.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"c3plot Method for  Kernel Density Estimation — c3plot.density","text":"","code":"# S3 method for density c3plot(x, main = NULL, xlab = NULL, ylab = \"Density\", type = \"l\", ...)"},{"path":"/reference/c3plot.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"c3plot Method for  Kernel Density Estimation — c3plot.density","text":"x \"density\" object main main title plot. xlab label x axis ylab label y axis, defaults description y. type 1-character string giving type plot desired. following values possible: \"p\" points, \"l\" lines, \"b\" points lines. ... arguments passed methods","code":""},{"path":"/reference/c3plot.factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor Variable Bar Plots — c3plot.factor","title":"Factor Variable Bar Plots — c3plot.factor","text":"function implements bar plot method factor arguments c3plot generic function. Bar heights counts factor levels.","code":""},{"path":"/reference/c3plot.factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor Variable Bar Plots — c3plot.factor","text":"","code":"# S3 method for factor c3plot(x, ylab = \"Count\", ...)"},{"path":"/reference/c3plot.factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor Variable Bar Plots — c3plot.factor","text":"x factor. ylab label y axis. ... arguments passed c3barplot.","code":""},{"path":[]},{"path":"/reference/c3plot.factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factor Variable Bar Plots — c3plot.factor","text":"","code":"mtcars <- mtcars mtcars$cyl <- as.factor(mtcars$cyl) c3plot(mtcars$cyl)  {\"x\":{\"height\":[11,7,14],\"categories\":[\"4\",\"6\",\"8\"],\"col\":null,\"main\":null,\"ylab\":\"Count\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/c3plot.function.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Function Plots with 'C3.js' — c3plot.function","title":"Draw Function Plots with 'C3.js' — c3plot.function","text":"Draws curve corresponding function interval [, ] interactive plot using 'C3.js'","code":""},{"path":"/reference/c3plot.function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Function Plots with 'C3.js' — c3plot.function","text":"","code":"# S3 method for `function` c3plot(x, from = 0, to = 1, ylab = NULL, ...)"},{"path":"/reference/c3plot.function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Function Plots with 'C3.js' — c3plot.function","text":"x name function. lower limit range function plotted. upper limit range function plotted. ylab label y axis, defaults name function specified x. ... arguments passed methods","code":""},{"path":"/reference/c3plot.function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Function Plots with 'C3.js' — c3plot.function","text":"","code":"c3plot(qnorm)  {\"x\":{\"data\":{\"x\":[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07000000000000001,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.5600000000000001,0.5700000000000001,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.6900000000000001,0.7000000000000001,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.8100000000000001,0.8200000000000001,0.8300000000000001,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.9400000000000001,0.9500000000000001,0.96,0.97,0.98,0.99,1],\"y\":[null,-2.326347874040841,-2.053748910631823,-1.880793608151251,-1.750686071252169,-1.644853626951473,-1.554773594596853,-1.47579102817917,-1.405071560309632,-1.340755033690217,-1.281551565544601,-1.22652812003661,-1.17498679206609,-1.1263911290388,-1.080319340814956,-1.036433389493789,-0.9944578832097528,-0.9541652531461942,-0.9153650878428141,-0.8778962950512285,-0.8416212335729142,-0.8064212470182404,-0.7721932141886849,-0.7388468491852137,-0.7063025628400875,-0.6744897501960817,-0.6433454053929168,-0.612812991016627,-0.5828415072712162,-0.5533847195556729,-0.5244005127080407,-0.4958503473474532,-0.4676987991145081,-0.4399131656732338,-0.4124631294414046,-0.3853204664075675,-0.3584587932511937,-0.3318533464368165,-0.3054807880993974,-0.279319034447454,-0.2533471031357998,-0.2275449766411493,-0.2018934791418509,-0.1763741647808613,-0.1509692154967772,-0.125661346855074,-0.1004337205114697,-0.07526986209982976,-0.05015358346473366,-0.02506890825871106,0,0.02506890825871106,0.05015358346473366,0.0752698620998299,0.1004337205114699,0.1256613468550741,0.1509692154967774,0.1763741647808615,0.2018934791418508,0.2275449766411493,0.2533471031357998,0.279319034447454,0.3054807880993974,0.3318533464368165,0.3584587932511937,0.3853204664075676,0.4124631294414048,0.4399131656732339,0.4676987991145083,0.4958503473474535,0.5244005127080411,0.5533847195556728,0.5828415072712162,0.612812991016627,0.6433454053929168,0.6744897501960817,0.7063025628400875,0.7388468491852137,0.7721932141886849,0.8064212470182404,0.8416212335729144,0.8778962950512288,0.9153650878428142,0.9541652531461946,0.9944578832097528,1.036433389493789,1.080319340814956,1.1263911290388,1.17498679206609,1.22652812003661,1.281551565544601,1.340755033690217,1.405071560309633,1.475791028179171,1.554773594596854,1.644853626951473,1.750686071252169,1.88079360815125,2.053748910631822,2.326347874040841,null],\"plot_type\":\"line\",\"xlim\":null,\"ylim\":null,\"title\":null,\"xlab\":\"x\",\"ylab\":\"qnorm\",\"show_points\":false,\"zoom\":true,\"col_hex\":null,\"group_names\":null,\"grouped_data\":null,\"legend\":{\"text\":null,\"position\":\"right\",\"hide\":false},\"sci_x\":false,\"sci_y\":false}},\"evals\":[],\"jsHooks\":[]} c3plot(sin, -pi, 2*pi)  {\"x\":{\"data\":{\"x\":[-3.141592653589793,-3.047344873982099,-2.953097094374406,-2.858849314766712,-2.764601535159018,-2.670353755551324,-2.57610597594363,-2.481858196335937,-2.387610416728243,-2.293362637120549,-2.199114857512855,-2.104867077905161,-2.010619298297468,-1.916371518689774,-1.82212373908208,-1.727875959474386,-1.633628179866693,-1.539380400258999,-1.445132620651305,-1.350884841043611,-1.256637061435917,-1.162389281828224,-1.06814150222053,-0.9738937226128361,-0.8796459430051424,-0.7853981633974483,-0.6911503837897546,-0.5969026041820609,-0.5026548245743672,-0.4084070449666735,-0.3141592653589793,-0.2199114857512856,-0.1256637061435919,-0.0314159265358982,0.06283185307179551,0.1570796326794897,0.2513274122871834,0.3455751918948771,0.4398229715025708,0.5340707511102645,0.6283185307179586,0.7225663103256523,0.816814089933346,0.9110618695410402,1.005309649148733,1.099557428756428,1.193805208364121,1.288052987971815,1.382300767579508,1.476548547187202,1.570796326794897,1.66504410640259,1.759291886010284,1.853539665617977,1.947787445225671,2.042035224833366,2.136283004441059,2.230530784048753,2.324778563656446,2.41902634326414,2.513274122871834,2.607521902479528,2.701769682087222,2.796017461694915,2.890265241302609,2.984513020910303,3.078760800517997,3.173008580125691,3.267256359733384,3.361504139341078,3.455751918948772,3.549999698556466,3.64424747816416,3.738495257771853,3.832743037379547,3.926990816987241,4.021238596594935,4.115486376202629,4.209734155810322,4.303981935418016,4.39822971502571,4.492477494633404,4.586725274241098,4.680973053848791,4.775220833456485,4.869468613064178,4.963716392671873,5.057964172279567,5.15221195188726,5.246459731494953,5.340707511102648,5.434955290710342,5.529203070318035,5.62345084992573,5.717698629533423,5.811946409141116,5.90619418874881,6.000441968356505,6.094689747964198,6.188937527571891,6.283185307179586],\"y\":[-1.224646799147353e-16,-0.09410831331851435,-0.1873813145857246,-0.2789911060392296,-0.3681245526846781,-0.4539904997395469,-0.5358267949789967,-0.6129070536529764,-0.6845471059286888,-0.7501110696304597,-0.8090169943749475,-0.8607420270039436,-0.9048270524660195,-0.9408807689542255,-0.9685831611286311,-0.9876883405951378,-0.9980267284282716,-0.9995065603657316,-0.9921147013144779,-0.9759167619387474,-0.9510565162951535,-0.9177546256839811,-0.8763066800438637,-0.8270805742745619,-0.7705132427757895,-0.7071067811865475,-0.6374239897486897,-0.5620833778521307,-0.4817536741017155,-0.3971478906347809,-0.3090169943749474,-0.2181432413965426,-0.1253332335643044,-0.03141075907812856,0.06279051952931301,0.1564344650402309,0.2486898871648547,0.3387379202452912,0.4257792915650724,0.509041415750371,0.5877852522924731,0.6613118653236518,0.7289686274214113,0.7901550123756904,0.8443279255020149,0.8910065241883678,0.9297764858882512,0.960293685676943,0.9822872507286885,0.99556196460308,1,0.9955619646030801,0.9822872507286887,0.9602936856769433,0.9297764858882516,0.8910065241883679,0.8443279255020154,0.7901550123756905,0.7289686274214121,0.6613118653236522,0.5877852522924732,0.5090414157503719,0.4257792915650729,0.3387379202452921,0.2486898871648552,0.156434465040231,0.06279051952931403,-0.03141075907812799,-0.1253332335643034,-0.2181432413965421,-0.3090169943749473,-0.39714789063478,-0.481753674101715,-0.5620833778521299,-0.6374239897486893,-0.7071067811865475,-0.7705132427757888,-0.8270805742745616,-0.8763066800438631,-0.9177546256839809,-0.9510565162951535,-0.9759167619387472,-0.9921147013144778,-0.9995065603657315,-0.9980267284282716,-0.9876883405951379,-0.9685831611286311,-0.9408807689542256,-0.9048270524660199,-0.8607420270039444,-0.8090169943749476,-0.75011106963046,-0.6845471059286896,-0.6129070536529765,-0.5358267949789971,-0.4539904997395478,-0.3681245526846795,-0.2789911060392297,-0.1873813145857256,-0.0941083133185158,-2.449293598294706e-16],\"plot_type\":\"line\",\"xlim\":null,\"ylim\":null,\"title\":null,\"xlab\":\"x\",\"ylab\":\"sin\",\"show_points\":false,\"zoom\":true,\"col_hex\":null,\"group_names\":null,\"grouped_data\":null,\"legend\":{\"text\":null,\"position\":\"right\",\"hide\":false},\"sci_x\":false,\"sci_y\":false}},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/c3plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Plotting with 'C3.js' — c3plot","title":"Generic Plotting with 'C3.js' — c3plot","text":"generic function plotting 'R' objects using C3.js charting library. syntax similar plot() generic function.","code":""},{"path":"/reference/c3plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Plotting with 'C3.js' — c3plot","text":"","code":"c3plot(x, ...)"},{"path":"/reference/c3plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Plotting with 'C3.js' — c3plot","text":"x x coordinates points 'R' object c3plot method. ... arguments passed methods.","code":""},{"path":"/reference/c3plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic Plotting with 'C3.js' — c3plot","text":"simple scatter line plots, c3plot.default used. However, c3plot methods various 'R' objects. Use methods(c3plot) documentation . Plots created interactive htmlwidgets can used RStudio Viewer embedded 'R Markdown' documents, 'Shiny' web applications, etc. default method, argument y y coordinates points required. methods, c3plot.density c3plot.function, y required methods can compute extract y coordinates x object","code":""},{"path":"/reference/c3plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Plotting with 'C3.js' — c3plot","text":"","code":"data(mtcars) c3plot(mtcars$disp, mtcars$hp, main = \"Displacement vs. HP in mtcars\")  {\"x\":{\"data\":{\"x\":[160,160,108,258,360,225,360,146.7,140.8,167.6,167.6,275.8,275.8,275.8,472,460,440,78.7,75.7,71.09999999999999,120.1,318,304,350,400,79,120.3,95.09999999999999,351,145,301,121],\"y\":[110,110,93,110,175,105,245,62,95,123,123,180,180,180,205,215,230,66,52,65,97,150,150,245,175,66,91,113,264,175,335,109],\"plot_type\":\"scatter\",\"xlim\":null,\"ylim\":null,\"title\":\"Displacement vs. HP in mtcars\",\"xlab\":\"mtcars$disp\",\"ylab\":\"mtcars$hp\",\"show_points\":true,\"zoom\":true,\"col_hex\":null,\"group_names\":null,\"grouped_data\":null,\"legend\":{\"text\":null,\"position\":\"right\",\"hide\":false},\"sci_x\":false,\"sci_y\":false}},\"evals\":[],\"jsHooks\":[]}  c3plot(qnorm)  {\"x\":{\"data\":{\"x\":[0,0.01,0.02,0.03,0.04,0.05,0.06,0.07000000000000001,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.5600000000000001,0.5700000000000001,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.6900000000000001,0.7000000000000001,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.8100000000000001,0.8200000000000001,0.8300000000000001,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.9400000000000001,0.9500000000000001,0.96,0.97,0.98,0.99,1],\"y\":[null,-2.326347874040841,-2.053748910631823,-1.880793608151251,-1.750686071252169,-1.644853626951473,-1.554773594596853,-1.47579102817917,-1.405071560309632,-1.340755033690217,-1.281551565544601,-1.22652812003661,-1.17498679206609,-1.1263911290388,-1.080319340814956,-1.036433389493789,-0.9944578832097528,-0.9541652531461942,-0.9153650878428141,-0.8778962950512285,-0.8416212335729142,-0.8064212470182404,-0.7721932141886849,-0.7388468491852137,-0.7063025628400875,-0.6744897501960817,-0.6433454053929168,-0.612812991016627,-0.5828415072712162,-0.5533847195556729,-0.5244005127080407,-0.4958503473474532,-0.4676987991145081,-0.4399131656732338,-0.4124631294414046,-0.3853204664075675,-0.3584587932511937,-0.3318533464368165,-0.3054807880993974,-0.279319034447454,-0.2533471031357998,-0.2275449766411493,-0.2018934791418509,-0.1763741647808613,-0.1509692154967772,-0.125661346855074,-0.1004337205114697,-0.07526986209982976,-0.05015358346473366,-0.02506890825871106,0,0.02506890825871106,0.05015358346473366,0.0752698620998299,0.1004337205114699,0.1256613468550741,0.1509692154967774,0.1763741647808615,0.2018934791418508,0.2275449766411493,0.2533471031357998,0.279319034447454,0.3054807880993974,0.3318533464368165,0.3584587932511937,0.3853204664075676,0.4124631294414048,0.4399131656732339,0.4676987991145083,0.4958503473474535,0.5244005127080411,0.5533847195556728,0.5828415072712162,0.612812991016627,0.6433454053929168,0.6744897501960817,0.7063025628400875,0.7388468491852137,0.7721932141886849,0.8064212470182404,0.8416212335729144,0.8778962950512288,0.9153650878428142,0.9541652531461946,0.9944578832097528,1.036433389493789,1.080319340814956,1.1263911290388,1.17498679206609,1.22652812003661,1.281551565544601,1.340755033690217,1.405071560309633,1.475791028179171,1.554773594596854,1.644853626951473,1.750686071252169,1.88079360815125,2.053748910631822,2.326347874040841,null],\"plot_type\":\"line\",\"xlim\":null,\"ylim\":null,\"title\":null,\"xlab\":\"x\",\"ylab\":\"qnorm\",\"show_points\":false,\"zoom\":true,\"col_hex\":null,\"group_names\":null,\"grouped_data\":null,\"legend\":{\"text\":null,\"position\":\"right\",\"hide\":false},\"sci_x\":false,\"sci_y\":false}},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/c3plot.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"C3 Plot Diagnostics for an lm Object — c3plot.lm","title":"C3 Plot Diagnostics for an lm Object — c3plot.lm","text":"plot residuals fitted values","code":""},{"path":"/reference/c3plot.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"C3 Plot Diagnostics for an lm Object — c3plot.lm","text":"","code":"# S3 method for lm c3plot(x, which = 1, ...)"},{"path":"/reference/c3plot.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"C3 Plot Diagnostics for an lm Object — c3plot.lm","text":"x \"lm\" object 1 supported value currently. argument included consistency base plot.lm() method. ... arguments passed methods.","code":""},{"path":"/reference/c3plot.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"C3 Plot Diagnostics for an lm Object — c3plot.lm","text":"","code":"## Analysis of the life-cycle savings data ## given in Belsley, Kuh and Welsch. lm.SR <- lm(sr ~ pop15 + pop75 + dpi + ddpi, data = LifeCycleSavings) c3plot(lm.SR)  {\"x\":{\"data\":{\"x\":[10.56642023691002,11.45361401226369,10.951042071662,6.44831912122319,9.32719055841199,9.106892362577829,8.842230671679298,9.36396391486503,6.431707097330129,5.654921821547396,11.44976115721967,5.995631303313452,12.92108565185996,10.16452817116036,12.73069929537467,13.78616846782401,6.365283789710914,6.989975515826936,7.48058197743013,8.491326000105122,7.948869359426437,12.35324510476386,15.81851445015341,10.08698144474573,12.02080656669553,12.50509021766303,11.1217853610216,14.22445448978222,8.384445182444569,6.653603392109403,7.734165602873722,8.145758881093201,6.160558983056961,6.10499155950126,13.25844467962179,10.65683443467681,12.0085657785904,12.44115645555031,11.12028339866931,11.64317414417192,7.795682405954304,5.627920005029337,10.50241276642556,8.671590145951271,5.587482305606382,8.809086228158755,10.73853140824666,11.50382733704987,11.71952566381197,7.680869048858573],\"y\":[0.8635797630899917,0.6163859877363139,2.218957928338001,-0.6983191212231921,3.55280944158801,-0.3168923625778305,-8.242230671679302,2.536036085134969,-1.45170709733013,5.125078178452604,5.400238842780327,-2.405631303313455,-1.681085651859964,2.475471828839635,-0.1806992953746673,-3.116168467824008,-3.355283789710918,0.7100244841730619,-6.210581977430132,0.5086739998948763,3.39113064057356,1.926754895236138,5.281485549846587,-6.10698144474573,-1.670806566695532,2.974909782336966,-0.8717853610215985,0.4255455102177795,2.28555481755543,0.6463966078905949,-3.294165602873723,-6.1257588810932,6.539441016943035,6.675008440498735,-0.7684446796217939,0.4831655653231867,1.291434221409602,-0.6711564555503073,-4.260283398669308,2.486825855828082,-2.665682405954306,-2.817920005029337,-2.692412766425559,-1.111590145951274,3.632517694393617,9.75091377184124,-3.018531408246661,-2.263827337049868,-2.829525663811974,-2.970869048858575],\"plot_type\":\"scatter\",\"xlim\":null,\"ylim\":null,\"title\":\"Residuals vs. Fitted\",\"xlab\":\"Fitted values\",\"ylab\":\"Residuals\",\"show_points\":true,\"zoom\":true,\"col_hex\":null,\"group_names\":null,\"grouped_data\":null,\"legend\":{\"text\":null,\"position\":\"right\",\"hide\":false},\"sci_x\":false,\"sci_y\":false}},\"evals\":[],\"jsHooks\":[]}"}]
